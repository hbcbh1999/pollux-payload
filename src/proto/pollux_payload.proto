syntax = "proto3";

option go_package = "pollux/private/grpc";

package pollux;

import "pollux.proto";

//Pollux server from Payload side
service PolluxPayload {
  rpc PolluxCommunication(PolluxMessage) returns (PolluxMessageResponse) {}
  rpc Start(PayloadStartMessage) returns (PolluxStandardResponse) {}
  rpc Terminate(PayloadTerminateMessage) returns (EmptyResponse) {}
}

//Pollux Payload server from Zebulon side
service ZebulonPayload {
  rpc PayloadReady(PayloadReadyMessage) returns (PolluxStandardResponse) {}
  rpc PayloadLoopDone(PayloadLoopDoneMessage) returns (PolluxStandardResponse) {}
  rpc PayloadInactive(PayloadInactiveMessage) returns (PolluxStandardResponse) {}
  rpc PolluxCommunication(PolluxMessage) returns (PolluxMessageResponse) {}
}

message PayloadReadyMessage {
  string info = 1;
  uint32 port = 2;
  pollux.PolluxVersion version = 3;
}

message PayloadLoopDoneMessage {
  uint32 iteration = 1;
}

message PayloadInactiveMessage {
  string info = 1;
  uint64 since = 2;
}

message PayloadStartMessage {
  string info = 1;
}

message PayloadTerminateMessage {
  string info = 1;
}
