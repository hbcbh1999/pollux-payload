syntax = "proto3";

option go_package = "mangrove/private/grpc";

package mangrove;

import "escher.proto";

//Escher server from Payload side
service EscherPayload {
  rpc EscherCommunication(EscherMessage) returns (EscherMessageResponse) {}
  rpc Terminate(PayloadTerminateMessage) returns (PayloadTerminateResponse) {}
}

//Escher server from Job side
service EscherJob {
  rpc PayloadReady(PayloadReadyMessage) returns (PayloadReadyResponse) {}
  rpc PayloadInactive(PayloadInactiveMessage) returns (PayloadInactiveResponse) {}
  rpc EscherCommunication(EscherMessage) returns (EscherMessageResponse) {}
}

message PayloadReadyMessage {
  string info = 1;
  uint32 port = 2;
}

message PayloadReadyResponse {
  string info = 1;
}

message PayloadInactiveMessage {
  string info = 1;
  uint64 since = 2;
}

message PayloadInactiveResponse {
  string info = 1;
}

message PayloadTerminateMessage {
  string info = 1;
}

message PayloadTerminateResponse {
}
